immich:
  ## This chart relies on the common library chart from bjw-s
  ## You can find it at https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
  ## Refer there for more detail about the supported values
  
  # These entries are shared between all the Immich components
  
  env:
    REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
    DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
    DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
    DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
    # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
    IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
    DB_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: immich-insight-clearance
          key: postgres-password
  
  image:
    tag: v1.91.4
  
  immich:
    persistence:
      # Main data store for all photos shared between different components.
      library:
        # Automatically creating the library volume is not supported by this chart
        # You have to specify an existing PVC to use
        existingClaim: immich-library-project-insight
  
  # Dependencies
  
  postgresql:
    enabled: true
    image:
      repository: tensorchord/pgvecto-rs
      tag: pg14-v0.1.11
    global:
      postgresql:
        auth:
          existingSecret: immich-insight-clearance
    primary:
      initdb:
        scripts:
          create-extensions.sql: |
            CREATE EXTENSION cube;
            CREATE EXTENSION earthdistance;
            CREATE EXTENSION vectors;
  
  redis:
    enabled: true
    architecture: standalone
    auth:
      enabled: false
  
  # Immich components
  
  server:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent
    
    ingress:
      main:
        enabled: true
        ingressClassName: tailscale
        annotations:
          # proxy-body-size is set to 0 to remove the body limit on file uploads
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
        - host: project-insight
          paths:
            - path: "/"
        defaultBackend:
          service:
            name: project-insight-server
            port:
              number: 3001
        tls:
        - hosts:
          - project-insight
  
  microservices:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent
  
  machine-learning:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
    env:
      TRANSFORMERS_CACHE: /cache
    persistence:
      cache:
        enabled: true
        size: 10Gi
        # Optional: Set this to pvc to avoid downloading the ML models every start.
        type: pvc
        accessMode: ReadWriteMany
        # storageClass: your-class
